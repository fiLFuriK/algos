def greedy_algorithm():
    global tr_size, clients
    global orders, n
    curr_flight = 0
    curr_capacity = 0
    served_clients = []
    i = 0
    while i < n:
        if curr_capacity + orders[i] <= tr_size:
            curr_capacity += orders[i]
            served_clients += [clients[i]]
            i += 1
        else:
            dict_cl = {j : client_order[j] for j in served_clients}
            curr_flight += 1
            print(f"flight {curr_flight}: served clients:{dict_cl}")
            curr_capacity = 0
            served_clients = []


from random import randint
n = int(input("input clients count: "))
tr_size = int(input("input transport size: "))

client_order = {'client_' + str(i) : randint(1, 100) for i in range(n)}
client_order = dict(sorted(client_order.items(), key=lambda item: item[1])) # сортировка словаря по значениям
clients = list(client_order.keys())
orders = list(client_order.values())
greedy_algorithm()
